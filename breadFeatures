get_ipython().magic('reset -sf')
import cv2
import matplotlib.pyplot as plt
import seaborn as sns
import pandas as pd
from skimage.feature import greycomatrix, greycoprops
from sklearn import preprocessing
from sklearn.ensemble import RandomForestClassifier
from sklearn import svm
import lightgbm as lgb
from sklearn import metrics
from sklearn.metrics import confusion_matrix
import random
import numpy as np

            

image_dataset = pd.DataFrame()
img = cv2.imread("H:/Bread/data/b02_01.jpg")
roi_prop = 0.8
H = img.shape[0]
W = img.shape[1]
XC = np.round(W/2)
YC = np.round(H/2)
h = np.round(roi_prop*H)
w = np.round(roi_prop*W)
X0 = XC
Y0 = YC

X1 = np.round(X0 - w/2 )
X2 =np.round( X0 + w/2)
Y1 =np.round(Y0 - h/2 )
Y2 =np.round( Y0 + h/2)

NUMDIST     = 19
             
DISTSTEP    = 10             
ANGLESTEP   = np.pi/4       
NUMANGLES   = 4 

window_name = 'Image'

X1 = X1.astype(np.int64)
X2 = X2.astype(np.int64)
Y1 = Y1.astype(np.int64)
Y2 = Y2.astype(np.int64)


start_point = (X1, Y1)  
end_point = (X2, Y2) 

color = (255, 0, 0)
thickness = 120
#img = cv2.rectangle(img, start_point, end_point, color, thickness)
Rold = img[:,:,0]
G = img[:,:,1]
B = img[:,:,2]
R = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)
plt.imshow(R)
R = R[X1:X2,Y1:Y2]
plt.imshow(R)

df = pd.DataFrame()
for DISTANCE in range(1,NUMDIST,DISTSTEP):
    for ANGLE in range(0,NUMANGLES,1):
        GLCM = greycomatrix(R,[DISTANCE],[ANGLE*ANGLESTEP])
        GLCM_Energy = greycoprops(GLCM,'energy')[0]
        df['Energy'] = GLCM_Energy
        GLCM_diss = greycoprops(GLCM,'dissimilarity')[0]
        df['Diss_sim'] = GLCM_diss
        GLCM_hom = greycoprops(GLCM,'homogeneity')[0]
        df['Homogen'] = GLCM_hom
        GLCM_contr = greycoprops(GLCM,'contrast')[0]
        df['contrast'] = GLCM_contr
        #print(df)
        image_dataset = image_dataset.append(df)
        
image_dataset
 
e = image_dataset.Energy
x=[1,2,3,4,5,6,7,8,9,10,11,12,13,14,16,17,18,19,20,21,22,23,24,25,26,27]
plt.plot(list(range(0, e.size)),e)
